import bpy


from mathutils import Color


def create(obj):
    # generated by gamerig.utils.write_metarig

    obj.rotation_mode     = 'XYZ'
    obj.rotation_euler      = (0.0, 0.0, 0.0)
    obj.rotation_quaternion = (1.0, 0.0, 0.0, 0.0)
    obj.rotation_axis_angle = (0.0, 0.0, 1.0, 0.0)

    bpy.ops.object.mode_set(mode='EDIT')
    arm = obj.data

    arm.gamerig.rig_ui_template = 'ui_template'

    for i in range(6):
        arm.gamerig.colors.add()

    arm.gamerig.colors[0].name = "Root"
    arm.gamerig.colors[0].active = Color((0.5490196347236633, 1.0, 1.0))
    arm.gamerig.colors[0].normal = Color((0.4352940022945404, 0.18431399762630463, 0.4156860113143921))
    arm.gamerig.colors[0].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
    arm.gamerig.colors[0].standard_colors_lock = True
    arm.gamerig.colors[1].name = "IK"
    arm.gamerig.colors[1].active = Color((0.5490196347236633, 1.0, 1.0))
    arm.gamerig.colors[1].normal = Color((0.6039220094680786, 0.0, 0.0))
    arm.gamerig.colors[1].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
    arm.gamerig.colors[1].standard_colors_lock = True
    arm.gamerig.colors[2].name = "Special"
    arm.gamerig.colors[2].active = Color((0.5490196347236633, 1.0, 1.0))
    arm.gamerig.colors[2].normal = Color((0.9568629860877991, 0.7882350087165833, 0.04705899953842163))
    arm.gamerig.colors[2].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
    arm.gamerig.colors[2].standard_colors_lock = True
    arm.gamerig.colors[3].name = "Tweak"
    arm.gamerig.colors[3].active = Color((0.5490196347236633, 1.0, 1.0))
    arm.gamerig.colors[3].normal = Color((0.03921600058674812, 0.21176500618457794, 0.5803920030593872))
    arm.gamerig.colors[3].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
    arm.gamerig.colors[3].standard_colors_lock = True
    arm.gamerig.colors[4].name = "FK"
    arm.gamerig.colors[4].active = Color((0.5490196347236633, 1.0, 1.0))
    arm.gamerig.colors[4].normal = Color((0.11764699965715408, 0.5686269998550415, 0.035294000059366226))
    arm.gamerig.colors[4].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
    arm.gamerig.colors[4].standard_colors_lock = True
    arm.gamerig.colors[5].name = "Extra"
    arm.gamerig.colors[5].active = Color((0.5490196347236633, 1.0, 1.0))
    arm.gamerig.colors[5].normal = Color((0.9686279892921448, 0.2509799897670746, 0.09411799907684326))
    arm.gamerig.colors[5].select = Color((0.31372547149658203, 0.7843138575553894, 1.0))
    arm.gamerig.colors[5].standard_colors_lock = True

    if len(arm.collections) > 0:
        for i in arm.collections:
            arm.collections.remove(i)
    arm.collections.new("Root")
    arm.collections[-1].gamerig.row = 14
    arm.collections[-1].gamerig.group = 1

    bones = {}

    bone = arm.edit_bones.new('Bone')
    bone.head[:] = 0.0000, 0.0000, 0.0000
    bone.tail[:] = 0.0000, 1.0000, 0.0000
    bone.roll = 0.0000
    bone.use_connect = False
    bone.use_deform = False
    bones['Bone'] = bone.name

    bpy.ops.object.mode_set(mode='OBJECT')
    pbone = obj.pose.bones[bones['Bone']]
    pbone.lock_location = (False, False, False)
    pbone.lock_rotation = (False, False, False)
    pbone.lock_rotation_w = False
    pbone.lock_scale = (False, False, False)
    pbone.rotation_mode = 'QUATERNION'
    arm.collections['Root'].assign(pbone)
    try:
        pbone.gamerig.name = "root"
    except AttributeError:
        pass

    bpy.ops.object.mode_set(mode='EDIT')
    for bone in arm.edit_bones:
        bone.select = False
        bone.select_head = False
        bone.select_tail = False
    for b in bones:
        bone = arm.edit_bones[bones[b]]
        bone.select = True
        bone.select_head = True
        bone.select_tail = True
        arm.edit_bones.active = bone

if __name__ == "__main__":
    create(bpy.context.active_object)
